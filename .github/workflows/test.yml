name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run unit tests
      run: |
        python -m pytest tests/ -m "unit" -v --tb=short
      env:
        ENVIRONMENT: test
        GITHUB_WEBHOOK_SECRET: test-secret-123
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_KEY: test-key
        SLACK_CLIENT_ID: test-client-id
        SLACK_CLIENT_SECRET: test-client-secret
    
    - name: Run webhook tests
      run: |
        python -m pytest tests/ -m "webhook" -v --tb=short
      env:
        ENVIRONMENT: test
        GITHUB_WEBHOOK_SECRET: test-secret-123
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_KEY: test-key
        SLACK_CLIENT_ID: test-client-id
        SLACK_CLIENT_SECRET: test-client-secret
    
    - name: Run notification tests
      run: |
        python -m pytest tests/ -m "notification" -v --tb=short
      env:
        ENVIRONMENT: test
        GITHUB_WEBHOOK_SECRET: test-secret-123
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_KEY: test-key
        SLACK_CLIENT_ID: test-client-id
        SLACK_CLIENT_SECRET: test-client-secret
    
    - name: Run integration tests (fast only)
      run: |
        python -m pytest tests/ -m "integration and not slow" -v --tb=short
      env:
        ENVIRONMENT: test
        GITHUB_WEBHOOK_SECRET: test-secret-123
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_KEY: test-key
        SLACK_CLIENT_ID: test-client-id
        SLACK_CLIENT_SECRET: test-client-secret

  coverage:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage[toml] pytest-cov
    
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --cov=app --cov-report=xml --cov-report=html --cov-report=term-missing
      env:
        ENVIRONMENT: test
        GITHUB_WEBHOOK_SECRET: test-secret-123
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_KEY: test-key
        SLACK_CLIENT_ID: test-client-id
        SLACK_CLIENT_SECRET: test-client-secret
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8
    
    - name: Check code formatting with Black
      run: black --check --diff app/ tests/
    
    - name: Check imports with isort
      run: isort --check-only --diff app/ tests/
    
    - name: Lint with flake8
      run: flake8 app/ tests/ --max-line-length=100 --extend-ignore=E203,W503